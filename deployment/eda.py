# Libraries
import pandas as pd
import numpy as np
import streamlit as st
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

def run():
    # HEADING
    st.markdown("<h1 style='text-align: center;'>EXPLORATORY DATA ANALYSIS</h1>", unsafe_allow_html=True)
    st.markdown("<h3 style='text-align: center; color: green;'>AI Generated vs Real Image</h3>", unsafe_allow_html=True)
    # LINE
    st.write('---')

    # BANNER
    st.image('https://www.shutterstock.com/image-illustration/customer-service-chatbot-chat-bot-600nw-2301355601.jpg',
            caption='shutterstock.com')
    st.write('''
The rapid development of AI, especially for generative models such as Generative Adversarial Networks (GANs) and diffusion models, has led to significant advances in the creation of highly realistic images. These AI-generated images have become indistinguishable from real photos in many cases, raising questions about their authenticity and potential impact on various sectors such as media, advertising and security.
             ''')

    st.write('## DATASET')
    st.write('### KAGGLE : AI Generated Images vs Real Images')
    st.write('###### by CASH BOWMAN')
    st.markdown("<a href='https://www.kaggle.com/datasets/cashbowman/ai-generated-images-vs-real-images/data'> LINK DATASET </a>", unsafe_allow_html=True)

    st.write('## GOAL')
    st.write('''
In this application, the built model will be used to distinguish between images generated by artificial intelligence algorithms (such as GANs or other generative models) and images taken from the real world (real photos).
This model will allow users to identify whether an image is the result of AI technology or comes from the real world, using image processing and machine learning techniques.
             ''')

    st.write('## JUSTIFICATION')
    st.write('''
This issue is particularly relevant as rapid advances in AI technology, particularly in the creation of highly realistic images, make it difficult to distinguish between real and AI-generated images. Technologies such as Generative Adversarial Networks (GANs) have been able to generate images that closely resemble real images, which are often used for unethical purposes, such as the spread of disinformation, deepfakes or visual deception.
        ''')
    st.markdown('<a href="https://www.bravenewplanet.org/episodes/deepfakes-and-the-future-truth">JUSTIFICATION 1</a><br><br><a href="https://daidac.thecjid.org/the-ethics-of-ai-generated-media-content-when-does-manipulation-go-too-far/">JUSTIFICATION 2</a>', unsafe_allow_html=True)

    st.write('# Data Visualization')
    data = pd.DataFrame({
    'Original': [539,436],
    'Train': [431,348],
    'Validation': [54,44],
    'Test': [54,44],
})
    data.index = ['AI Generated Image', 'Real Image']

    st.write('## Data Count')
    
    st.write('# Data Original Count')
    fig1 = plt.figure(figsize=(15, 8))
    sns.barplot(x=data.index, y=data['Original'], palette='icefire')
    st.pyplot(fig1)
    st.write('''
Original Total Data - AIArtData : 539

Original Total Data - RealArt : 436
             ''')

    st.write('# Data Train Count')
    fig2 = plt.figure(figsize=(15, 8))
    sns.barplot(x=data.index, y=data['Train'], palette='icefire')
    st.pyplot(fig2)
    st.write('''
Train Path

Total Data - AiArtData : 431

Total Data - RealArt : 348
             ''')

    st.write('# Data Validation Count')
    fig3 = plt.figure(figsize=(15, 8))
    sns.barplot(x=data.index, y=data['Validation'], palette='icefire')
    st.pyplot(fig3)
    st.write('''
Validation Path

Total Data - AiArtData : 54

Total Data - RealArt : 44
             ''')

    st.write('# Data Test Count')
    fig4 = plt.figure(figsize=(15, 8))
    sns.barplot(x=data.index, y=data['Test'], palette='icefire')
    st.pyplot(fig4)
    st.write('''
Test Path

Total Data - AiArtData : 54

Total Data - RealArt : 44
             ''')

    st.write('## Data Visualization')
    st.write('First 5 pictures')

    st.write('### Train Data Visualization')
    st.write('#### AI Generated Image')
    st.image('trainai.png',
            caption='AI Generated')
    st.write('#### Real Image')
    st.image('trainreal.png',
            caption='Real')
    
    st.write('### Validation Data Visualization')
    st.write('#### AI Generated Image')
    st.image('valai.png',
            caption='AI Generated')
    st.write('#### Real Image')
    st.image('valreal.png',
            caption='Real')
    
    st.write('### Test Data Visualization')
    st.write('#### AI Generated Image')
    st.image('testai.png',
            caption='AI Generated')
    st.write('#### Real Image')
    st.image('testreal.png',
            caption='Real')


if __name__ == '__main__':
    run()